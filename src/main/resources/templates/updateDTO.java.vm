package ${package.UpdateDTO};

#foreach($pkg in ${importUpdateDTOFrameworkPackages})
import ${pkg};
#end

#foreach($pkg in ${importUpdateDTOJavaPackages})
import ${pkg};
#end

/**
 * $!{table.comment}-修改DTO
 *
 * @author ${author}
 * @since ${date}
#if(${extraClassLinkComment})
 * @see ${package.Entity}.${entity}
## * @see ${package.Mapper}.${table.mapperName}
 * @see ${package.ServiceImpl}.${table.serviceImplName}
#end
 */
#if(${lombok})
@Data
    #if(${chainModel})
@Accessors(chain = true)
    #end
@EqualsAndHashCode
#end
#if(${springdoc})
##@Schema(name = "${entity}UpdateDTO", description = "$!{table.comment}-修改DTO")
@Schema(name = "${entity}UpdateDTO$!{swaggerUUID}", description = "$!{table.comment}-修改DTO")
#elseif(${swagger})
##@ApiModel(value = "${entity}UpdateDTO", description = "$!{table.comment}-修改DTO")
@ApiModel(value = "${entity}UpdateDTO$!{swaggerUUID}", description = "$!{table.comment}-修改DTO")
#end
public class ${entity}UpdateDTO {
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})
#if(($updateExcludeColumns.contains(${field.columnName})))
#elseif(${field.fill} && (${field.fill}=="UPDATE" || ${field.fill}=="INSERT_UPDATE"))
#elseif(${field.logicDeleteField})
#else

    #if("$!field.comment" != "")
        #if(${springdoc})
    @Schema(description = "${field.comment}")
        #elseif(${swagger})
    @ApiModelProperty("${field.comment}")
        #else
    /**
     * ${field.comment}
     */
        #end
    #end
    #if(${validated})## 参数校验
        #if(${field.keyFlag})## 主键
    @NotNull(message = "${field.comment}为必填项")
            #if(${field.propertyType}=="String")
    @NotBlank(message = "${field.comment}为必填项")
            #end
        #end
        #if(${field.versionField})## 乐观锁注解
    @NotNull(message = "${field.comment}为必填项")
            #if(${field.propertyType}=="String")
    @NotBlank(message = "${field.comment}为必填项")
            #end
        #end
        #if(${field.propertyType} == "String")## 字符串长度限制
    @Size(message = "${field.comment}长度不能超过${field.metaInfo.length}", max = ${field.metaInfo.length})
        #end
    #end
    private ${field.propertyType} ${field.propertyName};
#end
#end
## ----------  END 字段循环遍历  ----------
#if(!${lombok})
#foreach($field in ${table.fields})
#if($updateExcludeColumns.contains(${field.columnName}))
#elseif(${field.fill} && (${field.fill}=="UPDATE" || ${field.fill}=="INSERT_UPDATE"))
#elseif(${field.logicDeleteField})
#else
  #if(${field.propertyType.equals("boolean")})
    #set($getprefix="is")
  #else
    #set($getprefix="get")
  #end

    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

  #if(${chainModel})
    public ${entity}UpdateDTO set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
  #else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
  #end
        this.${field.propertyName} = ${field.propertyName};
  #if(${chainModel})
        return this;
  #end
    }
#end
#end
## --foreach end---
#end
## --end of #if(!${entityLombokModel})--

#if(!${lombok})

    @Override
    public String toString() {
        return "${entity}{" +
  #foreach($field in ${table.fields})
  #if($updateExcludeColumns.contains(${field.columnName}))
  #elseif(${field.fill} && (${field.fill}=="UPDATE" || ${field.fill}=="INSERT_UPDATE"))
  #elseif(${field.logicDeleteField})
  #else
    #if($!{foreach.index}==0)
        "${field.propertyName} = " + ${field.propertyName} +
    #else
        ", ${field.propertyName} = " + ${field.propertyName} +
    #end
  #end
  #end
        "}";
    }
#end
}
