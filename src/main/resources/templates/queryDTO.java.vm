package ${package.QueryDTO};

#foreach($pkg in ${importQueryDTOFrameworkPackages})
import ${pkg};
#end

#foreach($pkg in ${importQueryDTOJavaPackages})
import ${pkg};
#end

/**
 * $!{table.comment}-查询DTO
 *
 * @author ${author}
 * @since ${date}
#if(${commentLink})
 * @see ${package.Entity}.${entity}
 * @see ${package.Mapper}.${mapper}
 * @see ${package.ServiceImpl}.${serviceImpl}
#end
 */
#if(${lombok})
@Data
    #if(${chainModel})
@Accessors(chain = true)
    #end
    #if(${queryDTOExtendsEntity})
@EqualsAndHashCode(callSuper = true)
    #end
#end
#if(${springdoc})
@Schema(description = "$!{table.comment}-查询DTO")
#elseif(${swagger})
@ApiModel(description = "$!{table.comment}-查询DTO")
#end
#if(${queryDTOExtendsEntity})
public class ${queryDTO} extends ${entity} {
#else
public class ${queryDTO} {
#end
## ----------  BEGIN 字段循环遍历  ----------
#if(!${queryDTOExtendsEntity})
#foreach($field in ${table.fields})
#if(${field.logicDeleteField})
#else

    #if("$!field.comment" != "")
        #if(${springdoc})
    @Schema(description = "${field.comment}")
        #elseif(${swagger})
    @ApiModelProperty("${field.comment}")
        #else
    /**
     * ${field.comment}
     */
        #end
    #end
    private ${field.propertyType} ${field.propertyName};
#end
#end
#end
## ----------  END 字段循环遍历  ----------
#foreach($field in ${extraFields})

    #if("$!field.comment" != "")
        #if(${springdoc})
    @Schema(description = "${field.comment}")
        #elseif(${swagger})
    @ApiModelProperty("${field.comment}")
        #else
    /**
     * ${field.comment}
     */
        #end
    #end
    private ${field.propertyType} ${field.propertyName};
#end
## --基础getter/setter start--
#if(!${lombok} && !${queryDTOExtendsEntity})
#foreach($field in ${table.fields})
#if(${field.logicDeleteField})
#else

    #if(${field.propertyType.equals("boolean")})
        #set($getprefix="is")
    #else
        #set($getprefix="get")
    #end
    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

    #if(${chainModel})
    public ${queryDTO} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
    #else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
    #end
        this.${field.propertyName} = ${field.propertyName};
    #if(${chainModel})
        return this;
    #end
    }
#end
#end
#end
## --基础getter/setter end---
## --额外字段getter/setter start--
#foreach($field in ${extraFields})
#set($isLike = ($field.sqlOperator == "LIKE" || $field.sqlOperator == "NOT LIKE"))
#if(!${lombok} || $isLike)

    #if(${field.propertyType.equals("boolean")})
        #set($getprefix="is")
    #else
        #set($getprefix="get")
    #end
    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        #if($isLike)
        return ${field.propertyName} == null || ${field.propertyName}.isEmpty() ? null : "%" + ${field.propertyName} + "%";
        #else
        return ${field.propertyName};
        #end
    }
#end
#if(!${lombok})

    #if(${chainModel})
    public ${queryDTO} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
    #else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
    #end
        this.${field.propertyName} = ${field.propertyName};
    #if(${chainModel})
        return this;
    #end
    }
#end
#end
}
